/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as MarketplaceRouteImport } from './routes/marketplace'
import { Route as LoginRouteImport } from './routes/login'
import { Route as CourseRouteRouteImport } from './routes/course/route'
import { Route as ProtectedRouteRouteImport } from './routes/_protected/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MarketplaceCourse_idRouteImport } from './routes/marketplace_.$course_id'
import { Route as CourseCourse_idRouteImport } from './routes/course/$course_id'
import { Route as ProtectedUserSettingsRouteImport } from './routes/_protected/user/settings'
import { Route as ProtectedUserPurchasesRouteImport } from './routes/_protected/user/purchases'
import { Route as ProtectedUserProfileRouteImport } from './routes/_protected/user/profile'
import { Route as ProtectedUserHomeRouteImport } from './routes/_protected/user/home'
import { Route as ProtectedAdminUpdateCourseRouteImport } from './routes/_protected/admin/updateCourse'
import { Route as ProtectedAdminSettingsRouteImport } from './routes/_protected/admin/settings'
import { Route as ProtectedAdminProfileRouteImport } from './routes/_protected/admin/profile'
import { Route as ProtectedAdminHomeRouteImport } from './routes/_protected/admin/home'
import { Route as ProtectedAdminCreateCourseRouteImport } from './routes/_protected/admin/createCourse'
import { Route as ProtectedUserPurchasesCourse_idRouteImport } from './routes/_protected/user/purchases_.$course_id'
import { Route as ProtectedAdminUpdateCourseCourse_idRouteImport } from './routes/_protected/admin/updateCourse_.$course_id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceRoute = MarketplaceRouteImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseRouteRoute = CourseRouteRouteImport.update({
  id: '/course',
  path: '/course',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRouteRoute = ProtectedRouteRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceCourse_idRoute = MarketplaceCourse_idRouteImport.update({
  id: '/marketplace_/$course_id',
  path: '/marketplace/$course_id',
  getParentRoute: () => rootRouteImport,
} as any)
const CourseCourse_idRoute = CourseCourse_idRouteImport.update({
  id: '/$course_id',
  path: '/$course_id',
  getParentRoute: () => CourseRouteRoute,
} as any)
const ProtectedUserSettingsRoute = ProtectedUserSettingsRouteImport.update({
  id: '/user/settings',
  path: '/user/settings',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedUserPurchasesRoute = ProtectedUserPurchasesRouteImport.update({
  id: '/user/purchases',
  path: '/user/purchases',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedUserProfileRoute = ProtectedUserProfileRouteImport.update({
  id: '/user/profile',
  path: '/user/profile',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedUserHomeRoute = ProtectedUserHomeRouteImport.update({
  id: '/user/home',
  path: '/user/home',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedAdminUpdateCourseRoute =
  ProtectedAdminUpdateCourseRouteImport.update({
    id: '/admin/updateCourse',
    path: '/admin/updateCourse',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedAdminSettingsRoute = ProtectedAdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedAdminProfileRoute = ProtectedAdminProfileRouteImport.update({
  id: '/admin/profile',
  path: '/admin/profile',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedAdminHomeRoute = ProtectedAdminHomeRouteImport.update({
  id: '/admin/home',
  path: '/admin/home',
  getParentRoute: () => ProtectedRouteRoute,
} as any)
const ProtectedAdminCreateCourseRoute =
  ProtectedAdminCreateCourseRouteImport.update({
    id: '/admin/createCourse',
    path: '/admin/createCourse',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedUserPurchasesCourse_idRoute =
  ProtectedUserPurchasesCourse_idRouteImport.update({
    id: '/user/purchases_/$course_id',
    path: '/user/purchases/$course_id',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)
const ProtectedAdminUpdateCourseCourse_idRoute =
  ProtectedAdminUpdateCourseCourse_idRouteImport.update({
    id: '/admin/updateCourse_/$course_id',
    path: '/admin/updateCourse/$course_id',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/course': typeof CourseRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/signup': typeof SignupRoute
  '/course/$course_id': typeof CourseCourse_idRoute
  '/marketplace/$course_id': typeof MarketplaceCourse_idRoute
  '/admin/createCourse': typeof ProtectedAdminCreateCourseRoute
  '/admin/home': typeof ProtectedAdminHomeRoute
  '/admin/profile': typeof ProtectedAdminProfileRoute
  '/admin/settings': typeof ProtectedAdminSettingsRoute
  '/admin/updateCourse': typeof ProtectedAdminUpdateCourseRoute
  '/user/home': typeof ProtectedUserHomeRoute
  '/user/profile': typeof ProtectedUserProfileRoute
  '/user/purchases': typeof ProtectedUserPurchasesRoute
  '/user/settings': typeof ProtectedUserSettingsRoute
  '/admin/updateCourse/$course_id': typeof ProtectedAdminUpdateCourseCourse_idRoute
  '/user/purchases/$course_id': typeof ProtectedUserPurchasesCourse_idRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/course': typeof CourseRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/signup': typeof SignupRoute
  '/course/$course_id': typeof CourseCourse_idRoute
  '/marketplace/$course_id': typeof MarketplaceCourse_idRoute
  '/admin/createCourse': typeof ProtectedAdminCreateCourseRoute
  '/admin/home': typeof ProtectedAdminHomeRoute
  '/admin/profile': typeof ProtectedAdminProfileRoute
  '/admin/settings': typeof ProtectedAdminSettingsRoute
  '/admin/updateCourse': typeof ProtectedAdminUpdateCourseRoute
  '/user/home': typeof ProtectedUserHomeRoute
  '/user/profile': typeof ProtectedUserProfileRoute
  '/user/purchases': typeof ProtectedUserPurchasesRoute
  '/user/settings': typeof ProtectedUserSettingsRoute
  '/admin/updateCourse/$course_id': typeof ProtectedAdminUpdateCourseCourse_idRoute
  '/user/purchases/$course_id': typeof ProtectedUserPurchasesCourse_idRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/course': typeof CourseRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/signup': typeof SignupRoute
  '/course/$course_id': typeof CourseCourse_idRoute
  '/marketplace_/$course_id': typeof MarketplaceCourse_idRoute
  '/_protected/admin/createCourse': typeof ProtectedAdminCreateCourseRoute
  '/_protected/admin/home': typeof ProtectedAdminHomeRoute
  '/_protected/admin/profile': typeof ProtectedAdminProfileRoute
  '/_protected/admin/settings': typeof ProtectedAdminSettingsRoute
  '/_protected/admin/updateCourse': typeof ProtectedAdminUpdateCourseRoute
  '/_protected/user/home': typeof ProtectedUserHomeRoute
  '/_protected/user/profile': typeof ProtectedUserProfileRoute
  '/_protected/user/purchases': typeof ProtectedUserPurchasesRoute
  '/_protected/user/settings': typeof ProtectedUserSettingsRoute
  '/_protected/admin/updateCourse_/$course_id': typeof ProtectedAdminUpdateCourseCourse_idRoute
  '/_protected/user/purchases_/$course_id': typeof ProtectedUserPurchasesCourse_idRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/course'
    | '/login'
    | '/marketplace'
    | '/signup'
    | '/course/$course_id'
    | '/marketplace/$course_id'
    | '/admin/createCourse'
    | '/admin/home'
    | '/admin/profile'
    | '/admin/settings'
    | '/admin/updateCourse'
    | '/user/home'
    | '/user/profile'
    | '/user/purchases'
    | '/user/settings'
    | '/admin/updateCourse/$course_id'
    | '/user/purchases/$course_id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/course'
    | '/login'
    | '/marketplace'
    | '/signup'
    | '/course/$course_id'
    | '/marketplace/$course_id'
    | '/admin/createCourse'
    | '/admin/home'
    | '/admin/profile'
    | '/admin/settings'
    | '/admin/updateCourse'
    | '/user/home'
    | '/user/profile'
    | '/user/purchases'
    | '/user/settings'
    | '/admin/updateCourse/$course_id'
    | '/user/purchases/$course_id'
  id:
    | '__root__'
    | '/'
    | '/_protected'
    | '/course'
    | '/login'
    | '/marketplace'
    | '/signup'
    | '/course/$course_id'
    | '/marketplace_/$course_id'
    | '/_protected/admin/createCourse'
    | '/_protected/admin/home'
    | '/_protected/admin/profile'
    | '/_protected/admin/settings'
    | '/_protected/admin/updateCourse'
    | '/_protected/user/home'
    | '/_protected/user/profile'
    | '/_protected/user/purchases'
    | '/_protected/user/settings'
    | '/_protected/admin/updateCourse_/$course_id'
    | '/_protected/user/purchases_/$course_id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
  CourseRouteRoute: typeof CourseRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  MarketplaceRoute: typeof MarketplaceRoute
  SignupRoute: typeof SignupRoute
  MarketplaceCourse_idRoute: typeof MarketplaceCourse_idRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace': {
      id: '/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course': {
      id: '/course'
      path: '/course'
      fullPath: '/course'
      preLoaderRoute: typeof CourseRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace_/$course_id': {
      id: '/marketplace_/$course_id'
      path: '/marketplace/$course_id'
      fullPath: '/marketplace/$course_id'
      preLoaderRoute: typeof MarketplaceCourse_idRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/course/$course_id': {
      id: '/course/$course_id'
      path: '/$course_id'
      fullPath: '/course/$course_id'
      preLoaderRoute: typeof CourseCourse_idRouteImport
      parentRoute: typeof CourseRouteRoute
    }
    '/_protected/user/settings': {
      id: '/_protected/user/settings'
      path: '/user/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof ProtectedUserSettingsRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/user/purchases': {
      id: '/_protected/user/purchases'
      path: '/user/purchases'
      fullPath: '/user/purchases'
      preLoaderRoute: typeof ProtectedUserPurchasesRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/user/profile': {
      id: '/_protected/user/profile'
      path: '/user/profile'
      fullPath: '/user/profile'
      preLoaderRoute: typeof ProtectedUserProfileRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/user/home': {
      id: '/_protected/user/home'
      path: '/user/home'
      fullPath: '/user/home'
      preLoaderRoute: typeof ProtectedUserHomeRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/updateCourse': {
      id: '/_protected/admin/updateCourse'
      path: '/admin/updateCourse'
      fullPath: '/admin/updateCourse'
      preLoaderRoute: typeof ProtectedAdminUpdateCourseRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/settings': {
      id: '/_protected/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof ProtectedAdminSettingsRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/profile': {
      id: '/_protected/admin/profile'
      path: '/admin/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof ProtectedAdminProfileRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/home': {
      id: '/_protected/admin/home'
      path: '/admin/home'
      fullPath: '/admin/home'
      preLoaderRoute: typeof ProtectedAdminHomeRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/createCourse': {
      id: '/_protected/admin/createCourse'
      path: '/admin/createCourse'
      fullPath: '/admin/createCourse'
      preLoaderRoute: typeof ProtectedAdminCreateCourseRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/user/purchases_/$course_id': {
      id: '/_protected/user/purchases_/$course_id'
      path: '/user/purchases/$course_id'
      fullPath: '/user/purchases/$course_id'
      preLoaderRoute: typeof ProtectedUserPurchasesCourse_idRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
    '/_protected/admin/updateCourse_/$course_id': {
      id: '/_protected/admin/updateCourse_/$course_id'
      path: '/admin/updateCourse/$course_id'
      fullPath: '/admin/updateCourse/$course_id'
      preLoaderRoute: typeof ProtectedAdminUpdateCourseCourse_idRouteImport
      parentRoute: typeof ProtectedRouteRoute
    }
  }
}

interface ProtectedRouteRouteChildren {
  ProtectedAdminCreateCourseRoute: typeof ProtectedAdminCreateCourseRoute
  ProtectedAdminHomeRoute: typeof ProtectedAdminHomeRoute
  ProtectedAdminProfileRoute: typeof ProtectedAdminProfileRoute
  ProtectedAdminSettingsRoute: typeof ProtectedAdminSettingsRoute
  ProtectedAdminUpdateCourseRoute: typeof ProtectedAdminUpdateCourseRoute
  ProtectedUserHomeRoute: typeof ProtectedUserHomeRoute
  ProtectedUserProfileRoute: typeof ProtectedUserProfileRoute
  ProtectedUserPurchasesRoute: typeof ProtectedUserPurchasesRoute
  ProtectedUserSettingsRoute: typeof ProtectedUserSettingsRoute
  ProtectedAdminUpdateCourseCourse_idRoute: typeof ProtectedAdminUpdateCourseCourse_idRoute
  ProtectedUserPurchasesCourse_idRoute: typeof ProtectedUserPurchasesCourse_idRoute
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedAdminCreateCourseRoute: ProtectedAdminCreateCourseRoute,
  ProtectedAdminHomeRoute: ProtectedAdminHomeRoute,
  ProtectedAdminProfileRoute: ProtectedAdminProfileRoute,
  ProtectedAdminSettingsRoute: ProtectedAdminSettingsRoute,
  ProtectedAdminUpdateCourseRoute: ProtectedAdminUpdateCourseRoute,
  ProtectedUserHomeRoute: ProtectedUserHomeRoute,
  ProtectedUserProfileRoute: ProtectedUserProfileRoute,
  ProtectedUserPurchasesRoute: ProtectedUserPurchasesRoute,
  ProtectedUserSettingsRoute: ProtectedUserSettingsRoute,
  ProtectedAdminUpdateCourseCourse_idRoute:
    ProtectedAdminUpdateCourseCourse_idRoute,
  ProtectedUserPurchasesCourse_idRoute: ProtectedUserPurchasesCourse_idRoute,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

interface CourseRouteRouteChildren {
  CourseCourse_idRoute: typeof CourseCourse_idRoute
}

const CourseRouteRouteChildren: CourseRouteRouteChildren = {
  CourseCourse_idRoute: CourseCourse_idRoute,
}

const CourseRouteRouteWithChildren = CourseRouteRoute._addFileChildren(
  CourseRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
  CourseRouteRoute: CourseRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  MarketplaceRoute: MarketplaceRoute,
  SignupRoute: SignupRoute,
  MarketplaceCourse_idRoute: MarketplaceCourse_idRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
